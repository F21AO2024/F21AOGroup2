pipeline {
    agent any

    environment {
        DOCKER_COMPOSE_VERSION = '3.9'
    }

    stages {
        stage('SonarQube Code Scan') {
            agent {
                docker {
                    image 'sonarsource/sonar-scanner-cli:latest'
                    args '-v $PWD:/usr/src'
                }
            }
            steps {
                withSonarQubeEnv('SonarQube Server') {
                    sh 'sonar-scanner -Dsonar.projectBaseDir=/usr/src -Dsonar.projectKey=Jenkins-project-f21AO'
                }
            }
        }

        stage('Build (Docker compose)') {
            steps {
                sh 'docker compose -f docker-compose.yml build'
            }
        }

       stage('Trivy Security Scan') {
      steps {
        sh 'trivy --no-progress build-f21ao-main-allnone-docker-compose-patient-registration:latest'
        sh 'trivy --no-progress build-f21ao-main-allnone-docker-compose-gateway:latest'
        sh 'trivy --no-progress build-f21ao-main-allnone-docker-compose-ward-admissions:latest'
        sh 'trivy --no-progress build-f21ao-main-allnone-docker-compose-lab-treatment:latest'
      }
}

        stage('Run (Docker compose)') {
            steps {
                sh 'docker compose -f docker-compose.yml up -d'
            }
        }
    }

    post {
        always {
            sh 'docker compose -f docker-compose.yml down'
        }
    }
}
